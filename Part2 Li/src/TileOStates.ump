class ActionTile {
	tileStatus {
		Active {
			land [inactivityPeriod == 0] -> / {
				doLand();
			} Active;
			land [inactivityPeriod > 0] -> / {
				doLand();
			} Inactive;
		}
		Inactive {
			changeTurn [turnsUntilActive == 0] -> Active;
			changeTurn [turnsUntilActive > 0] -> / {
				setTurnsUntilActive(getTurnsUntilActive()-1);
			} Inactive;
		}
	}
}

class Player {
	playerStatus {
		hasNextTurn{
			changeTurn [turnsUntilActive == 0] -> hasNextTurn;
			changeTurn [turnsUntilActive > 0] -> / {
				setTurnsUntilActive(getTurnsUntilActive()-1);
			} noNextTurn;
		}  
		noNextTurn {
			changeTurn [turnsUntilActive == 0] -> hasNextTurn;
			changeTurn [turnsUntilActive > 0] -> / {
				setTurnsUntilActive(getTurnsUntilActive()-1);
			} noNextTurn;
		}
	}
}